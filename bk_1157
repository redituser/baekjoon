package bk_1157_not;
//보류 내일 다시 풀어볼예정 (수정 완료)
//소요시간 7시간 
//65~90 A ~ Z
//97~122 a~z
//대소문자 구분없음

package bk_1157_not;


import java.util.Scanner;

public class Sub {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		char[] alphabet = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
                'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
		String str = sc.nextLine().toUpperCase();
		int count = 0;
		int maxcount = 0;
		int [] ncount = new int[26];
		boolean tf = true;
		
		
		for (int i = 0; i < str.length(); i++) {
			count = 0;
			for (int j = 0; j < alphabet.length; j++) {
				if(str.charAt(i) == alphabet[j]) {
					//apple 이라고하면 p가 2개인 걸 저장할 배열이 필요함
					ncount[j]++;
					//알파벳을 순서를 참고한 배열 nocount[j]에 count 값이 들어감
				}
			}
			
		}
		
		//최대값 비교
		int max = 0;
		for (int i = 0; i < ncount.length; i++) {
			if(ncount[i] > ncount[max]) {
				max = i;
			}
		}
		
		//중복된 최대값이 있는지 검사 있다면 count ++
		for (int i = 0; i < ncount.length; i++) {
			if( ncount[max] == ncount[i]) {
				maxcount++;
			}
		}
		
		if(maxcount > 1) {
			System.out.println("?");
		}else {
			System.out.println(alphabet[max]);
		}

	}

}

